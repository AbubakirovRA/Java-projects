//import java.util.ArrayList;

public class combine {
    public static void main(String[] args) {
       // String[] email = new String[]{"скидка", "анонс", "популярное", "рассказ"};
       // permute(email);
    }
/* 
    public static String permute(String[] arr) {
            ArrayList<String> cur = new ArrayList<>(); // переменная для хранения фрагмента массив
            for (int i = 0; i < arr.length; i++) {
  
      // получаем новый массив cur, удаляя из вхного массива один элемент, начиная с текущей позиции
      // при этом из входного массива этот элемент тоже удалится
                cur = arr.splice(i, 1);
  
      // если от входного массива ничего не осталось
      if (arr.length === 0) {
        // то приклеиваем текущее значение нарезки к варианту, который лежит в памяти, 
        // и добавляем получившийся результат в итоговый массив
        results.push(memo.concat(cur));
      }
  
      // вызываем новый виток рекурсии
      // в качестве аргументов передаём копию входящего массива и добавляем к кешу памяти то, что получилось после удаления одного символа из входящего массива
      permute(arr.slice(), memo.concat(cur));
  
      // возвращаем в исходный массив первый элемент из нового массива, но уже на другую позицию
      arr.splice(i, 0, cur[0]);
    }
  
    // возвращаем обратно массив с результатами перестановок
    return results;
  }
*/
}
